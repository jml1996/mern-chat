[{"/Users/joshualovins/Documents/Lambda/mern-chat/client/src/index.js":"1","/Users/joshualovins/Documents/Lambda/mern-chat/client/src/App.js":"2","/Users/joshualovins/Documents/Lambda/mern-chat/client/src/reportWebVitals.js":"3","/Users/joshualovins/Documents/Lambda/mern-chat/client/src/config.js":"4","/Users/joshualovins/Documents/Lambda/mern-chat/client/src/components/LoginForm.js":"5","/Users/joshualovins/Documents/Lambda/mern-chat/client/src/components/RegisterForm.js":"6","/Users/joshualovins/Documents/Lambda/mern-chat/client/src/components/Chat.js":"7","/Users/joshualovins/Documents/Lambda/mern-chat/client/src/components/PrivateRoute.js":"8","/Users/joshualovins/Documents/Lambda/mern-chat/client/src/components/BottomBar.js":"9","/Users/joshualovins/Documents/Lambda/mern-chat/client/src/schemata/registerschema.js":"10","/Users/joshualovins/Documents/Lambda/mern-chat/client/src/schemata/loginschema.js":"11","/Users/joshualovins/Documents/Lambda/mern-chat/client/src/reducers/index.js":"12","/Users/joshualovins/Documents/Lambda/mern-chat/client/src/actions/index.js":"13"},{"size":971,"mtime":1611176566289,"results":"14","hashOfConfig":"15"},{"size":1039,"mtime":1611272023391,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":1610751738175,"results":"17","hashOfConfig":"15"},{"size":183,"mtime":1610754647515,"results":"18","hashOfConfig":"15"},{"size":6083,"mtime":1611271162152,"results":"19","hashOfConfig":"15"},{"size":6431,"mtime":1611272110545,"results":"20","hashOfConfig":"15"},{"size":3938,"mtime":1611184281152,"results":"21","hashOfConfig":"15"},{"size":431,"mtime":1610858353711,"results":"22","hashOfConfig":"15"},{"size":2339,"mtime":1611180112618,"results":"23","hashOfConfig":"15"},{"size":308,"mtime":1611114364594,"results":"24","hashOfConfig":"15"},{"size":318,"mtime":1611114350955,"results":"25","hashOfConfig":"15"},{"size":412,"mtime":1611160650986,"results":"26","hashOfConfig":"15"},{"size":236,"mtime":1611184037152,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"31"},"13e5po0",{"filePath":"32","messages":"33","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"31"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"31"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"31"},"/Users/joshualovins/Documents/Lambda/mern-chat/client/src/index.js",["59"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport { createStore, applyMiddleware } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport thunk from \"redux-thunk\";\nimport reducer from \"./reducers\";\nimport logger from \"redux-logger\";\n\nconst store = createStore(reducer, applyMiddleware(thunk, logger));\n// const rootElement = document.getElementById(\"root\");\n\n\n// Add this in your component file\n// require('react-dom');\n// window.React2 = require('react');\n// console.log(window.React1 === window.React2);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n",["60","61"],"/Users/joshualovins/Documents/Lambda/mern-chat/client/src/App.js",["62","63","64","65"],"/Users/joshualovins/Documents/Lambda/mern-chat/client/src/reportWebVitals.js",[],"/Users/joshualovins/Documents/Lambda/mern-chat/client/src/config.js",[],"/Users/joshualovins/Documents/Lambda/mern-chat/client/src/components/LoginForm.js",[],"/Users/joshualovins/Documents/Lambda/mern-chat/client/src/components/RegisterForm.js",[],"/Users/joshualovins/Documents/Lambda/mern-chat/client/src/components/Chat.js",["66"],"import React from 'react';\nimport config from '../config';\nimport io from 'socket.io-client';\n\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\n\nimport { Link } from \"react-router-dom\";\n\nimport BottomBar from './BottomBar';\nimport '../Chat.css';\n\nimport { setCurrentUsername } from \"./../actions\";\nimport { connect } from \"react-redux\";\n\nclass Chat extends React.Component {\n  // constructor(props) {\n  //   super(props);\n  //   this.\n  state = {\n    chat: [],\n    content: '',\n    name: this.props.currentUsername,\n  };\n\n  // }\n\n  componentDidMount() {\n    const currentUsernameLocalStorage = localStorage.getItem(\"currentUsernameLocalStorage\");\n    this.props.setCurrentUsername(currentUsernameLocalStorage);\n    // this.setState({\n    //   ...this.state,\n    //   name: this.props.currentUsername\n    // })\n    console.log(currentUsernameLocalStorage);\n    // this.socket = io(config[process.env.NODE_ENV].endpoint);\n    this.socket = io();\n\n    // Load the last 10 messages in the window.\n    this.socket.on('init', (msg) => {\n      let msgReversed = msg.reverse();\n      this.setState((state) => ({\n        chat: [...state.chat, ...msgReversed],\n      }), this.scrollToBottom);\n    });\n\n    // Update the chat if a new message is broadcasted.\n    this.socket.on('push', (msg) => {\n      this.setState((state) => ({\n        chat: [...state.chat, msg],\n      }), this.scrollToBottom);\n    });\n  }\n\n  // Save the message the user is typing in the input field.\n  handleContent(event) {\n    this.setState({\n      content: event.target.value,\n    });\n  }\n  \n  // handleName(event) {\n  //   this.setState({\n  //     name: event.target.value,\n  //   });\n  // }\n\n  handleSubmit(event) {\n    // Prevent the form to reload the current page.\n    event.preventDefault();\n\n    // Send the new message to the server.\n    this.socket.emit('message', {\n      name: this.state.name,\n      content: this.state.content,\n    });\n\n    this.setState((state) => {\n      // Update the chat with the user's message and remove the current message.\n      return {\n        chat: [...state.chat, {\n          name: state.name,\n          content: state.content,\n        }],\n        content: '',\n      };\n    }, this.scrollToBottom);\n  }\n\n  // Always make sure the window is scrolled down to the last message.\n  scrollToBottom() {\n    const chat = document.getElementById('chat');\n    chat.scrollTop = chat.scrollHeight;\n  }\n\n  render() {\n    const logout = () => {\n      console.log(this.props);\n      localStorage.removeItem(\"token\");\n      localStorage.removeItem(\"currentUsernameLocalStorage\");\n      this.props.setCurrentUsername(\"\");\n    }\n    return (\n      <div className=\"Chat\">\n        <nav className=\"nav\">\n            <Link to={\"/chat\"} style={{ color: \"black\", textDecoration: \"none\" }}>\n                <p>Chat</p>\n            </Link>\n            <Link to={\"/\"} onClick={logout} style={{ color: \"black\", textDecoration: \"none\" }}>\n                <p>Log Out</p>\n            </Link>\n        </nav>\n        <Paper id=\"chat\" elevation={3}>\n          {this.state.chat.map((el, index) => {\n            return (\n              <div key={index}>\n                <Typography variant=\"caption\" className=\"name\">\n                  {el.name}\n                </Typography>\n                <Typography variant=\"body1\" className=\"content\">\n                  {el.content}\n                </Typography>\n              </div>\n            );\n          })}\n        </Paper>\n        <BottomBar\n          content={this.state.content}\n          handleContent={this.handleContent.bind(this)}\n          name={this.state.name}\n          handleSubmit={this.handleSubmit.bind(this)}\n          // name={this.state.name}\n        />\n      </div>\n    );\n  }\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    currentUsername: state.currentUsername,\n  };\n};\n\nexport default connect(mapStateToProps, { setCurrentUsername })(Chat);\n","/Users/joshualovins/Documents/Lambda/mern-chat/client/src/components/PrivateRoute.js",[],"/Users/joshualovins/Documents/Lambda/mern-chat/client/src/components/BottomBar.js",["67"],"import React from 'react';\n\nimport { fade, makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport InputBase from '@material-ui/core/InputBase';\nimport Toolbar from '@material-ui/core/Toolbar';\n\nimport ChatIcon from '@material-ui/icons/Chat';\nimport FaceIcon from '@material-ui/icons/Face';\n\nimport { setCurrentUsername } from \"./../actions\";\nimport { connect } from \"react-redux\";\n\nconst useStyles = makeStyles(theme => ({\n  appBar: {\n    backgroundColor: 'gray',\n    bottom: 0,\n    top: 'auto',\n  },\n  inputContainer: {\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    borderRadius: theme.shape.borderRadius,\n    marginLeft: theme.spacing(1),\n    position: 'relative',\n    width: '100%',\n  },\n  icon: {\n    width: theme.spacing(7),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'inherit',\n    width: 'auto',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 7),\n    width: '100%',  },\n}));\n\nfunction BottomBar(props) {\n  const classes = useStyles();\n  console.log(props.currentUsername);\n\n  return (\n    <AppBar position=\"fixed\" className={classes.appBar}>\n      <Toolbar>\n        <div style={{maxWidth: '100%', display:'flex', flexDirection:'row', justifyContent:'space-evenly'}}>\n          <div>\n            {props.currentUsername}\n          </div>\n        </div>\n        <div className={classes.inputContainer}>\n          <form onSubmit={props.handleSubmit}>\n            <div className={classes.icon}>\n              <ChatIcon />\n            </div>\n            <InputBase\n              onChange={props.handleContent}\n              value={props.content}\n              placeholder=\"Type your message...\"\n              classes={{\n                root: classes.inputRoot,\n                input: classes.inputInput,\n              }}\n              inputProps={{ 'aria-label': 'content' }}\n            />\n          </form>\n        </div>\n      </Toolbar>\n    </AppBar>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    currentUsername: state.currentUsername,\n  };\n};\n\nexport default connect(mapStateToProps, { setCurrentUsername })(BottomBar);","/Users/joshualovins/Documents/Lambda/mern-chat/client/src/schemata/registerschema.js",[],"/Users/joshualovins/Documents/Lambda/mern-chat/client/src/schemata/loginschema.js",[],"/Users/joshualovins/Documents/Lambda/mern-chat/client/src/reducers/index.js",[],"/Users/joshualovins/Documents/Lambda/mern-chat/client/src/actions/index.js",["68"],"import axios from 'axios';\n\nexport const SET_CURRENT_USERNAME = \"SET_CURRENT_USERNAME\";\n\nexport const setCurrentUsername = (currentUsernameLocalStorage) => {\n    return {type:SET_CURRENT_USERNAME, payload:currentUsernameLocalStorage};\n}",{"ruleId":"69","severity":1,"message":"70","line":5,"column":8,"nodeType":"71","messageId":"72","endLine":5,"endColumn":23},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"69","severity":1,"message":"77","line":2,"column":17,"nodeType":"71","messageId":"72","endLine":2,"endColumn":25},{"ruleId":"69","severity":1,"message":"78","line":2,"column":27,"nodeType":"71","messageId":"72","endLine":2,"endColumn":36},{"ruleId":"69","severity":1,"message":"79","line":11,"column":8,"nodeType":"71","messageId":"72","endLine":11,"endColumn":13},{"ruleId":"69","severity":1,"message":"80","line":13,"column":42,"nodeType":"71","messageId":"72","endLine":13,"endColumn":46},{"ruleId":"69","severity":1,"message":"81","line":2,"column":8,"nodeType":"71","messageId":"72","endLine":2,"endColumn":14},{"ruleId":"69","severity":1,"message":"82","line":9,"column":8,"nodeType":"71","messageId":"72","endLine":9,"endColumn":16},{"ruleId":"69","severity":1,"message":"79","line":1,"column":8,"nodeType":"71","messageId":"72","endLine":1,"endColumn":13},"no-unused-vars","'reportWebVitals' is defined but never used.","Identifier","unusedVar","no-native-reassign",["83"],"no-negated-in-lhs",["84"],"'useState' is defined but never used.","'useEffect' is defined but never used.","'axios' is defined but never used.","'Link' is defined but never used.","'config' is defined but never used.","'FaceIcon' is defined but never used.","no-global-assign","no-unsafe-negation"]